\begin{algorithm}
	\caption{Geração de solução no ACO $(G, r, D, \tau, h, Exp'_{size})$}
	\label{alg_aco_prm_construir_solucao}
	\begin{algorithmic}[1]
		\State $T \gets novaArvore()$
		\State $Exp \gets adjacencia(G, r)$
		\State $marcarVisitado(r)$
		\While{$D \not\subset V(T)$}
		\State $Exp' \gets amostraAleatoria(Exp, Exp'_{size})$
		\State $calcularProbabilidades(Exp', \tau, h)$
		\State $e \gets roleta(Exp')$
		\State $T \gets incluirAresta(T, e)$
		\State $marcarVisitado(e[1])$
		\State $Adj \gets adjacencia(e[1])$
		\For{$v \in Adj$}
		\If{já existe aresta $a$ em $Exp$ que leva a $v$}
		\State $Exp \gets Exp - {a}$
		\State $novaAresta \gets [e[1]], v)$
		\State $calcularProbabilidades({a, }, \tau, h$
		\State Sorteie uma das duas arestas de acordo com as probabilidades e adicione a vencedora em $Exp$
		\ElsIf{$v$ não tiver sido visitado}
		\State Inclua $(j, v)$ em $Exp$
		\EndIf
		\EndFor
		\EndWhile
		\State Pode a árvore $T$
		\State \Return $T$
	\end{algorithmic}
\end{algorithm}